// Code generated by github.com/goghcrow/go-co DO NOT EDIT.
package src

import (
	. "github.com/goghcrow/go-co"
	ʂɘʠ "github.com/goghcrow/go-co/seq"
)

func shadow0() ʂɘʠ.Iterator[int] {
	return ʂɘʠ.Start[int](ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {
		i := 0
		return ʂɘʠ.Combine[int](ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {
			return ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {

				i := 0
				return ʂɘʠ.For[int](func() bool {
					return i < 2
				}, func() {
					i++
				}, ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {
					return ʂɘʠ.Bind[int](i, func() ʂɘʠ.Seq[int] {
						return ʂɘʠ.Normal[int]()
					})
				}))
			})
		}), ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {

			i++
			println(i)
			return ʂɘʠ.Return[int]()
		}))
	}))

}

// ↑ is equivalent to ↓
func shadow1() ʂɘʠ.Iterator[int] {
	return ʂɘʠ.Start[int](ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {
		i := 0
		return ʂɘʠ.Combine[int](ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {
			return ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {

				i := 0
				return ʂɘʠ.For[int](func() bool {
					return i < 2
				}, func() {
					i++
				}, ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {
					return ʂɘʠ.Bind[int](i, func() ʂɘʠ.Seq[int] {
						return ʂɘʠ.Normal[int]()
					})
				}))
			})
		}), ʂɘʠ.Delay[int](func() ʂɘʠ.Seq[int] {

			i++
			println(i)
			return ʂɘʠ.Return[int]()
		}))
	}))

}
